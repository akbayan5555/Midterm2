import cv2
import numpy as np
import mediapipe as mp
import time
import autopy

wCam, hCam = 640, 480
smoothening = 3
blink_threshold = 30

pTime = 0
plocX, plocY = 0, 0
clocX, clocY = 0, 0
wScr, hScr = autopy.screen.size()

mp_face_mesh = mp.solutions.face_mesh
face_mesh = mp_face_mesh.FaceMesh(refine_landmarks=True)
mp_drawing = mp.solutions.drawing_utils

cap = cv2.VideoCapture(0)
cap.set(3, wCam)
cap.set(4, hCam)

while True:
    success, img = cap.read()
    if not success:
        continue

    imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    results = face_mesh.process(imgRGB)

    if results.multi_face_landmarks:
        face_landmarks = results.multi_face_landmarks[0]
        ih, iw, _ = img.shape

        left_eye = [33, 159]
        right_eye = [362, 386]
        iris = 468

        lx, ly = int(face_landmarks.landmark[iris].x * iw), int(face_landmarks.landmark[iris].y * ih)

        x3 = np.interp(lx, (0, wCam), (0, wScr))
        y3 = np.interp(ly, (0, hCam), (0, hScr))

        clocX = plocX + (x3 - plocX) / smoothening
        clocY = plocY + (y3 - plocY) / smoothening

        clocX = np.clip(clocX, 0, wScr)
        clocY = np.clip(clocY, 0, hScr)

        autopy.mouse.move(wScr - clocX, clocY)

        plocX, plocY = clocX, clocY

        def get_eye_distance(p1, p2):
            x1 = int(face_landmarks.landmark[p1].x * iw)
            y1 = int(face_landmarks.landmark[p1].y * ih)
            x2 = int(face_landmarks.landmark[p2].x * iw)
            y2 = int(face_landmarks.landmark[p2].y * ih)
            return np.linalg.norm([x2 - x1, y2 - y1])

        left_blink = get_eye_distance(*left_eye)
        right_blink = get_eye_distance(*right_eye)

        if left_blink < blink_threshold and right_blink < blink_threshold:
            autopy.mouse.click()
            time.sleep(0.2)

    cTime = time.time()
    fps = 1 / (cTime - pTime)
    pTime = cTime
    cv2.putText(img, f'FPS: {int(fps)}', (20, 50),
                cv2.FONT_HERSHEY_PLAIN, 2, (0, 255, 0), 2)

    cv2.imshow("AI Eye Mouse", img)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()